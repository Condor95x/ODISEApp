"""Finca y sectores - Campo etiqueta2s

Revision ID: 7796a427ae0d
Revises: daefca362c57
Create Date: 2025-08-30 09:01:30.115144

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '7796a427ae0d'
down_revision: Union[str, None] = 'daefca362c57'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sectores', sa.Column('etiqueta', sa.String(), nullable=True))
    # ### end Alembic commands ###
    
    # CÓDIGO ADICIONAL: Poblar etiquetas para registros existentes
    connection = op.get_bind()
    
    # Verificar qué tipo de base de datos estás usando
    dialect_name = connection.dialect.name
    
    if dialect_name == 'postgresql':
        # Para PostgreSQL
        connection.execute(sa.text("""
            UPDATE sectores 
            SET etiqueta = f.value || ' - Sector ' || sectores.value
            FROM finca f 
            WHERE f.finca_id = sectores.finca_id
        """))
    elif dialect_name == 'mysql':
        # Para MySQL
        connection.execute(sa.text("""
            UPDATE sectores 
            INNER JOIN finca f ON f.finca_id = sectores.finca_id
            SET sectores.etiqueta = CONCAT(f.value, ' - Sector ', sectores.value)
        """))
    else:
        # Para SQLite y otros (usando concatenación con ||)
        connection.execute(sa.text("""
            UPDATE sectores 
            SET etiqueta = (
                SELECT f.value || ' - Sector ' || sectores.value
                FROM finca f 
                WHERE f.finca_id = sectores.finca_id
            )
            WHERE finca_id IS NOT NULL
        """))
    
    # Para sectores sin finca (si los hay)
    connection.execute(sa.text("""
        UPDATE sectores 
        SET etiqueta = 'Sector ' || value
        WHERE etiqueta IS NULL
    """))
    
    print("✅ Etiquetas generadas para todos los sectores existentes")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('sectores', 'etiqueta')
    # ### end Alembic commands ###