"""Change foreign key to task_id

Revision ID: 711ad888d4ec
Revises: 643fa97d2238
Create Date: 2025-08-28 20:25:17.990466

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '711ad888d4ec'
down_revision: Union[str, None] = '643fa97d2238'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_historico_rendimiento_id', table_name='historico_rendimiento')
    op.drop_table('historico_rendimiento')
    op.create_index(op.f('ix_batches_id'), 'batches', ['id'], unique=False)
    op.alter_column('grapevines', 'gv_id',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('grapevines_gv_id_seq'::regclass)"))
    op.alter_column('grapevines', 'name',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('input', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('idx_inputs_category', table_name='input')
    op.create_index(op.f('ix_input_id'), 'input', ['id'], unique=False)
    op.alter_column('input_categories', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_input_categories_id'), 'input_categories', ['id'], unique=False)
    op.drop_index('idx_input_stock_input', table_name='input_stock')
    op.drop_index('idx_input_stock_warehouse', table_name='input_stock')
    op.create_index(op.f('ix_input_stock_id'), 'input_stock', ['id'], unique=False)
    op.drop_constraint('input_stock_input_id_fkey', 'input_stock', type_='foreignkey')
    op.create_foreign_key(None, 'input_stock', 'input', ['input_id'], ['id'], ondelete='CASCADE')
    op.alter_column('inventory_movements', 'comments',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('idx_inventory_movements_input', table_name='inventory_movements')
    op.drop_index('idx_inventory_movements_operation', table_name='inventory_movements')
    op.create_index(op.f('ix_inventory_movements_id'), 'inventory_movements', ['id'], unique=False)
    op.drop_constraint('inventory_movements_input_id_fkey', 'inventory_movements', type_='foreignkey')
    op.create_foreign_key(None, 'inventory_movements', 'input', ['input_id'], ['id'], ondelete='CASCADE')
    op.drop_column('inventory_movements', 'operacion_id')
    op.create_index(op.f('ix_operaciones_id'), 'operaciones', ['id'], unique=False)
    op.create_foreign_key(None, 'operaciones', 'plot', ['parcela_id'], ['plot_id'])
    op.create_foreign_key(None, 'operaciones', 'task_list', ['tipo_operacion'], ['task_list_id'])
    op.add_column('plot', sa.Column('finca', sa.String(), nullable=True))
    op.add_column('plot', sa.Column('sector', sa.String(), nullable=True))
    op.alter_column('plot', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.alter_column('plot', 'plot_area',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
    op.alter_column('plot', 'plot_conduction',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('plot', 'plot_management',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_plot_plot_id'), 'plot', ['plot_id'], unique=False)
    op.create_unique_constraint(None, 'plot', ['plot_name'])
    op.drop_constraint('fk_plot_rootstock', 'plot', type_='foreignkey')
    op.drop_constraint('fk_plot_var', 'plot', type_='foreignkey')
    op.create_foreign_key(None, 'plot', 'grapevines', ['plot_var'], ['gv_id'])
    op.create_foreign_key(None, 'plot', 'vineyard', ['plot_conduction'], ['vy_id'])
    op.create_foreign_key(None, 'plot', 'grapevines', ['plot_rootstock'], ['gv_id'])
    op.create_foreign_key(None, 'plot', 'vineyard', ['plot_management'], ['vy_id'])
    op.drop_index('idx_purchase_order_details_input', table_name='purchase_order_details')
    op.drop_index('idx_purchase_order_details_order', table_name='purchase_order_details')
    op.create_index(op.f('ix_purchase_order_details_id'), 'purchase_order_details', ['id'], unique=False)
    op.drop_constraint('purchase_order_details_input_id_fkey', 'purchase_order_details', type_='foreignkey')
    op.create_foreign_key(None, 'purchase_order_details', 'input', ['input_id'], ['id'], ondelete='CASCADE')
    op.alter_column('purchase_orders', 'comments',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_index('idx_purchase_orders_supplier', table_name='purchase_orders')
    op.create_index(op.f('ix_purchase_orders_id'), 'purchase_orders', ['id'], unique=False)
    op.alter_column('suppliers', 'address',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_suppliers_id'), 'suppliers', ['id'], unique=False)
    op.drop_index('idx_task_inputs_input', table_name='task_inputs')
    op.drop_index('idx_task_inputs_operation', table_name='task_inputs')
    op.drop_index('idx_task_inputs_warehouse', table_name='task_inputs')
    op.create_index(op.f('ix_task_inputs_id'), 'task_inputs', ['id'], unique=False)
    op.drop_constraint('task_inputs_input_id_fkey', 'task_inputs', type_='foreignkey')
    op.create_foreign_key(None, 'task_inputs', 'input', ['input_id'], ['id'], ondelete='CASCADE')
    op.alter_column('task_list', 'task_type',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('task_list', 'task_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_index(op.f('ix_task_list_task_list_id'), 'task_list', ['task_list_id'], unique=False)
    op.create_unique_constraint(None, 'task_list', ['task_name'])
    op.alter_column('usuarios', 'nombre',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('usuarios', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('usuarios', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.create_index(op.f('ix_usuarios_id'), 'usuarios', ['id'], unique=False)
    op.create_index(op.f('ix_vessel_activities_id'), 'vessel_activities', ['id'], unique=False)
    op.create_index(op.f('ix_vessels_id'), 'vessels', ['id'], unique=False)
    op.create_unique_constraint(None, 'vineyard', ['value'])
    op.alter_column('warehouse', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_warehouse_id'), 'warehouse', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_warehouse_id'), table_name='warehouse')
    op.alter_column('warehouse', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'vineyard', type_='unique')
    op.drop_index(op.f('ix_vessels_id'), table_name='vessels')
    op.drop_index(op.f('ix_vessel_activities_id'), table_name='vessel_activities')
    op.drop_index(op.f('ix_usuarios_id'), table_name='usuarios')
    op.alter_column('usuarios', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('usuarios', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('usuarios', 'nombre',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint(None, 'task_list', type_='unique')
    op.drop_index(op.f('ix_task_list_task_list_id'), table_name='task_list')
    op.alter_column('task_list', 'task_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('task_list', 'task_type',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint(None, 'task_inputs', type_='foreignkey')
    op.create_foreign_key('task_inputs_input_id_fkey', 'task_inputs', 'input', ['input_id'], ['id'])
    op.drop_index(op.f('ix_task_inputs_id'), table_name='task_inputs')
    op.create_index('idx_task_inputs_warehouse', 'task_inputs', ['warehouse_id'], unique=False)
    op.create_index('idx_task_inputs_operation', 'task_inputs', ['operation_id'], unique=False)
    op.create_index('idx_task_inputs_input', 'task_inputs', ['input_id'], unique=False)
    op.drop_index(op.f('ix_suppliers_id'), table_name='suppliers')
    op.alter_column('suppliers', 'address',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_index(op.f('ix_purchase_orders_id'), table_name='purchase_orders')
    op.create_index('idx_purchase_orders_supplier', 'purchase_orders', ['supplier_id'], unique=False)
    op.alter_column('purchase_orders', 'comments',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'purchase_order_details', type_='foreignkey')
    op.create_foreign_key('purchase_order_details_input_id_fkey', 'purchase_order_details', 'input', ['input_id'], ['id'])
    op.drop_index(op.f('ix_purchase_order_details_id'), table_name='purchase_order_details')
    op.create_index('idx_purchase_order_details_order', 'purchase_order_details', ['order_id'], unique=False)
    op.create_index('idx_purchase_order_details_input', 'purchase_order_details', ['input_id'], unique=False)
    op.drop_constraint(None, 'plot', type_='foreignkey')
    op.drop_constraint(None, 'plot', type_='foreignkey')
    op.drop_constraint(None, 'plot', type_='foreignkey')
    op.drop_constraint(None, 'plot', type_='foreignkey')
    op.create_foreign_key('fk_plot_var', 'plot', 'grapevines', ['plot_var'], ['gv_id'], ondelete='SET NULL')
    op.create_foreign_key('fk_plot_rootstock', 'plot', 'grapevines', ['plot_rootstock'], ['gv_id'], ondelete='SET NULL')
    op.drop_constraint(None, 'plot', type_='unique')
    op.drop_index(op.f('ix_plot_plot_id'), table_name='plot')
    op.alter_column('plot', 'plot_management',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('plot', 'plot_conduction',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('plot', 'plot_area',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.NUMERIC(precision=15, scale=2),
               existing_nullable=True)
    op.alter_column('plot', 'active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.drop_column('plot', 'sector')
    op.drop_column('plot', 'finca')
    op.drop_constraint(None, 'operaciones', type_='foreignkey')
    op.drop_constraint(None, 'operaciones', type_='foreignkey')
    op.drop_index(op.f('ix_operaciones_id'), table_name='operaciones')
    op.add_column('inventory_movements', sa.Column('operacion_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'inventory_movements', type_='foreignkey')
    op.create_foreign_key('inventory_movements_input_id_fkey', 'inventory_movements', 'input', ['input_id'], ['id'])
    op.drop_index(op.f('ix_inventory_movements_id'), table_name='inventory_movements')
    op.create_index('idx_inventory_movements_operation', 'inventory_movements', ['operation_id'], unique=False)
    op.create_index('idx_inventory_movements_input', 'inventory_movements', ['input_id'], unique=False)
    op.alter_column('inventory_movements', 'comments',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'input_stock', type_='foreignkey')
    op.create_foreign_key('input_stock_input_id_fkey', 'input_stock', 'input', ['input_id'], ['id'])
    op.drop_index(op.f('ix_input_stock_id'), table_name='input_stock')
    op.create_index('idx_input_stock_warehouse', 'input_stock', ['warehouse_id'], unique=False)
    op.create_index('idx_input_stock_input', 'input_stock', ['input_id'], unique=False)
    op.drop_index(op.f('ix_input_categories_id'), table_name='input_categories')
    op.alter_column('input_categories', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_index(op.f('ix_input_id'), table_name='input')
    op.create_index('idx_inputs_category', 'input', ['category_id'], unique=False)
    op.alter_column('input', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('grapevines', 'name',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('grapevines', 'gv_id',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('grapevines_gv_id_seq'::regclass)"))
    op.drop_index(op.f('ix_batches_id'), table_name='batches')
    op.create_table('historico_rendimiento',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('ano', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('parcela_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('kilos', sa.NUMERIC(), autoincrement=False, nullable=False),
    sa.Column('calidad', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('comentario', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='historico_rendimiento_pkey')
    )
    op.create_index('ix_historico_rendimiento_id', 'historico_rendimiento', ['id'], unique=False)
    # ### end Alembic commands ###
